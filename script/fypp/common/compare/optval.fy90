#:include "../../common.fypp"
module fassert_common_optval
    use, intrinsic :: iso_fortran_env
    implicit none
    private
    public :: optval

    interface optval
        #:for kind in REAL_KINDS
        procedure :: optval_${kind}$
        #:endfor
        procedure :: optval_logical
    end interface
contains
    #:for kind, type in REAL_KINDS_TYPES
    !>#{if "real32" in type}#単#{elif "real64" in type}#倍#{else}#4倍#{endif}#精度実数型引数`x`が渡されていれば`x`を，
    !>渡されていなければ`deafult`を返す．
    pure elemental function optval_${kind}$(x, default) result(y)
        implicit none
        !&<
        ${type}$, intent(in), optional  :: x
        ${type}$, intent(in)            :: default
            !! `x`が渡されていない場合の既定値
        !&>
        ${type}$ :: y

        if (present(x)) then
            y = x
        else
            y = default
        end if
    end function optval_${kind}$

    #:endfor

    !>論理型引数`x`が渡されていれば`x`を，
    !>渡されていなければ`deafult`を返す．
    pure elemental function optval_logical(x, default) result(y)
        implicit none
        !&<
        logical, intent(in), optional   :: x
        logical, intent(in)             :: default
            !! `x`が渡されていない場合の既定値
        !&>
        logical :: y

        if (present(x)) then
            y = x
        else
            y = default
        end if
    end function optval_logical
end module fassert_common_optval
