#:include "../../../common.fypp"
module fassert_common_compare_equal_real
    use, intrinsic :: iso_fortran_env
    implicit none
    private
    public :: is_approx_equal

    interface is_approx_equal
        #:for kind in REAL_KINDS
        procedure :: is_approx_equal_${kind}$
        #:endfor
    end interface

contains
    #:for kind, type in REAL_KINDS_TYPES
    !>二つのスカラ値の差が許容値以下の場合に`.true.`，そうでない場合`.false.`を返す．
    !>許容値が指定されない場合，マシンイプシロンが許容値として使われる．
    pure function is_approx_equal_${kind}$(val1, val2, tolerance) result(is_equal)
        use :: fassert_common_optval
        implicit none
        ${type}$, intent(in) :: val1
        ${type}$, intent(in) :: val2
        ${type}$, intent(in), optional :: tolerance
        logical :: is_equal

        is_equal = (abs(val1 - val2) <= optval(tolerance, &
                                               default=epsilon(val1)))
    end function is_approx_equal_${kind}$

    #:endfor
end module fassert_common_compare_equal_real
