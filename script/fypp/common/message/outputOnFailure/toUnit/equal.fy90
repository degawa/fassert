#:include "../../../../common.fypp"
module fassert_common_message_outputOnFailure_toUnit_equal
    use, intrinsic :: iso_fortran_env
    use :: fassert_common_unit, msg_unit => assertion_message_unit
    use :: fassert_common_message, only:default_verbose_format_indent
    use :: fassert_common_message_outputOnFailure_format
    use :: fassert_common_message_outputOnFailure_toString_equal
    implicit none
    private
    public :: output_on_failure

    interface output_on_failure
        #:for kind in INTRINSIC_KINDS
        procedure :: output_${kind}$
        #:endfor
        #:for kind in INTRINSIC_KINDS
        #:for rank in RANKS
        procedure :: output_${kind}$_rank${rank}$
        #:endfor
        #:endfor
    end interface

contains
    #:for kind, type in INTRINSIC_KINDS_TYPES
    !>実測値と予測値を装置に出力する．
    subroutine output_${kind}$(actual, expected)
        implicit none
        ${type}$, intent(in) :: actual
            !! 実測値
        ${type}$, intent(in) :: expected
            !! 予測値

        character(:), allocatable :: msg
        call output_on_failure(actual, expected, msg)
        write (msg_unit, '(A)') msg
    end subroutine output_${kind}$

    #:endfor

    #:for kind, type in INTRINSIC_KINDS_TYPES
    #:for rank in RANKS
    !>実測値と予測値の差の最大・最小値を装置に出力する．
    subroutine output_${kind}$_rank${rank}$(actual, expected)
        implicit none
        ${type}$, intent(in) :: actual${rank_suffix(rank)}$
            !! 実測値
        ${type}$, intent(in) :: expected${rank_suffix(rank)}$
            !! 予測値

        character(:), allocatable :: msg
        call output_on_failure(actual, expected, msg)
        write (msg_unit, '(A)') msg
    end subroutine output_${kind}$_rank${rank}$

    #:endfor
    #:endfor
end module fassert_common_message_outputOnFailure_toUnit_equal
